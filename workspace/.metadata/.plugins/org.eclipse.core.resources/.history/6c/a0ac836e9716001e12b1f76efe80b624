package com.example.demo.model;


import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.springframework.format.annotation.DateTimeFormat;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.PrePersist;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Transient;
import lombok.Data;

@Data
@Entity
@Table(name = "post")
public class Post {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer postId;
	
	private String text;
	
	private String location;
	
	@DateTimeFormat(pattern = "yyyy/MM/dd HH:mm:ss")
	@Temporal(TemporalType.TIMESTAMP)
	private Date postDate;
	
	@Transient
	private Integer myLikeId;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "memberid")
	@JsonIgnoreProperties({"email", "password", "posts", "role"})
	private Member member;
	
	
	@OneToMany(mappedBy = "post", cascade = CascadeType.ALL)
	@JsonIgnoreProperties("post")
	private Set<PostPhoto> postPhotos = new HashSet<>();
	
	
	@OneToMany(mappedBy = "post", cascade = CascadeType.ALL)
	@JsonIgnoreProperties({"post", "postCommentComments", "postCommentLikes"})
	private Set<PostComment> postComments = new HashSet<>();
	
	
	@OneToMany(mappedBy = "post", cascade = CascadeType.ALL)
	@JsonIgnoreProperties("post")
	private Set<PostLike> postLikes = new HashSet<>();
	
	@PrePersist
	public void onCreate() {
		if (postDate == null) 
			postDate = new Date();
	}
	
	
	public Post() {
	}


	public Integer getPostId() {
		return postId;
	}


	public void setPostId(Integer postId) {
		this.postId = postId;
	}


	public String getText() {
		return text;
	}


	public void setText(String text) {
		this.text = text;
	}


	public String getLocation() {
		return location;
	}


	public void setLocation(String location) {
		this.location = location;
	}


	public Date getPostDate() {
		return postDate;
	}


	public void setPostDate(Date postDate) {
		this.postDate = postDate;
	}


	public Member getMember() {
		return member;
	}


	public void setMember(Member member) {
		this.member = member;
	}


	public Set<PostPhoto> getPostPhotos() {
		return postPhotos;
	}


	public void setPostPhotos(Set<PostPhoto> postPhotos) {
		this.postPhotos = postPhotos;
	}


	public Set<PostComment> getPostComments() {
		return postComments;
	}


	public void setPostComments(Set<PostComment> postComments) {
		this.postComments = postComments;
	}


	public Set<PostLike> getPostLikes() {
		return postLikes;
	}


	public void setPostLikes(Set<PostLike> postLikes) {
		this.postLikes = postLikes;
	}


	public Integer getMyLikeId() {
		return myLikeId;
	}


	public void setMyLikeId(Integer myLikeId) {
		this.myLikeId = myLikeId;
	}

	
	
	
	
}
