package com.example.demo.controller;

import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.example.demo.model.Member;
import com.example.demo.service.MemberService;

import jakarta.servlet.http.HttpSession;

@Controller
public class MemberController {

	@Autowired
	private MemberService mService;
	
	@GetMapping("/member/login")
	public String login() {
		return "member/login";
	}
	
	@GetMapping("/member/signup")
	public String signup() {
		return "member/signup";
	}
	
	@PostMapping("/member/add")
	public String insert(@RequestParam("account") String account, @RequestParam("password") String password, @RequestParam("firstName") String firstName, @RequestParam("lastName") String lastName, MultipartFile file) {
		try {
			Member m = new Member();
			m.setEmail(account);
			m.setPassword(password);
			m.setFirstname(firstName);
			m.setLastname(lastName);
			m.setMemberPhoto(file.getBytes());
			
			mService.insertMember(m);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return "redirect:/member/login";
		
	}
	
	@PostMapping("/member/getMyAccount")
	public String getMyAccount(@RequestParam("account") String account, @RequestParam("password") String password, HttpSession session) {
		Member m = mService.findByAccountAndPassword(account, password);
		session.setAttribute("loginMember", m);
		
		return "redirect:/";
	}
	
	@GetMapping("/member/getPhoto")
	public ResponseEntity<byte[]> getPhoto(Integer id) {
		System.out.println("GET PHOTO LAAAAAAAAAAAAAAAAAa");
		Member m = mService.findById(id);
		byte[] photo = m.getMemberPhoto();
		
		HttpHeaders header = new HttpHeaders();
		header.setContentType(MediaType.IMAGE_JPEG);
		
		return new ResponseEntity<byte[]>(photo, header, HttpStatus.OK);
	}
}
