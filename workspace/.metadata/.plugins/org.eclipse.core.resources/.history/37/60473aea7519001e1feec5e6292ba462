package com.example.demo.controller;

import java.io.IOException;
import java.util.Date;
import java.util.HashSet;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.lang.NonNull;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.example.demo.model.Follow;
import com.example.demo.model.Member;
import com.example.demo.model.Post;
import com.example.demo.model.PostDTO;
import com.example.demo.model.PostPhoto;
import com.example.demo.service.FollowService;
import com.example.demo.service.MemberService;
import com.example.demo.service.PostService;

import jakarta.servlet.http.HttpServletRequest;

@RestController
@RequestMapping("/post")
public class PostContorller {

	@Autowired
	private PostService pService;
	
	@Autowired
	private MemberService mService;
	
	@Autowired
	private FollowService fService;
	
	@GetMapping("/getById")
	public PostDTO finById(@RequestParam Integer postId) {
		return pService.findPostById(postId);
	}
	
	@GetMapping("/getAll")
	public List<PostDTO> getAll(@NonNull HttpServletRequest request) {
		return pService.getAll(request);
	}
	
	@GetMapping("/getMyFollowing")
	public List<PostDTO> getMyFollowing(@NonNull HttpServletRequest request) {
		Integer memberid = mService.findIdByJwt(request);
		
		List<Follow> oldList = fService.findByFollowerid(memberid);
		List<Integer> idList = fService.extractFollowingID(oldList);
		
		List<Post> oldPostList = pService.findAllByMemberidList(idList);
		
		return pService.PostListToPostToDTO(memberid, oldPostList);
	}
	
	@GetMapping("/getMyPost")
	public List<PostDTO> getMyPost(@NonNull HttpServletRequest request) {
		Integer memberid = mService.findIdByJwt(request);
		
		List<Post> oldList = pService.findAllByMemberId(memberid);
		
		
		return pService.PostListToPostToDTO(memberid, oldList);
	}
	
	@PostMapping("/add")
	public void addPost(String text, String location, MultipartFile file, @NonNull HttpServletRequest request) {
		try {
			Member member = mService.findByJwt(request);
			Post post = new Post();
			HashSet<PostPhoto> photoSet = new HashSet<PostPhoto>();
			PostPhoto photo = new PostPhoto();
			photo.setPostPhotoFile(file.getBytes());
			photoSet.add(photo);
			
			post.setText(text);
			post.setLocation(location);
			post.setPostPhotos(photoSet);
			post.setMember(member);
			
			pService.insertPost(post);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	@PutMapping("update")
	public void update(@RequestParam Integer postId, @RequestParam String text, @RequestParam String location) {
		PostDTO old = pService.findPostById(postId);
		Date date = old.getPostDate();
		
		Post post = new Post();
		post.setPostDate(date);
		post.setPostId(postId);
		post.setText(text);
		post.setLocation(location);
		
		pService.update(post);
	}
	
	@DeleteMapping("delete")
	public void delete(@RequestParam Integer postId) {
		pService.delete(postId);
	}
		
}
